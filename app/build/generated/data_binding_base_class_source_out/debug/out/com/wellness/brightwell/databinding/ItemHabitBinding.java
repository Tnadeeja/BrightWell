// Generated by view binder compiler. Do not edit!
package com.wellness.brightwell.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.wellness.brightwell.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHabitBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageButton buttonDelete;

  @NonNull
  public final ImageButton buttonEdit;

  @NonNull
  public final ImageButton buttonMenu;

  @NonNull
  public final ConstraintLayout cardBackground;

  @NonNull
  public final CheckBox checkBoxHabit;

  @NonNull
  public final LinearLayout layoutTags;

  @NonNull
  public final TextView textViewCategory;

  @NonNull
  public final TextView textViewDifficulty;

  @NonNull
  public final TextView textViewHabitDescription;

  @NonNull
  public final TextView textViewHabitName;

  @NonNull
  public final TextView textViewIcon;

  @NonNull
  public final TextView textViewStreak;

  private ItemHabitBinding(@NonNull MaterialCardView rootView, @NonNull ImageButton buttonDelete,
      @NonNull ImageButton buttonEdit, @NonNull ImageButton buttonMenu,
      @NonNull ConstraintLayout cardBackground, @NonNull CheckBox checkBoxHabit,
      @NonNull LinearLayout layoutTags, @NonNull TextView textViewCategory,
      @NonNull TextView textViewDifficulty, @NonNull TextView textViewHabitDescription,
      @NonNull TextView textViewHabitName, @NonNull TextView textViewIcon,
      @NonNull TextView textViewStreak) {
    this.rootView = rootView;
    this.buttonDelete = buttonDelete;
    this.buttonEdit = buttonEdit;
    this.buttonMenu = buttonMenu;
    this.cardBackground = cardBackground;
    this.checkBoxHabit = checkBoxHabit;
    this.layoutTags = layoutTags;
    this.textViewCategory = textViewCategory;
    this.textViewDifficulty = textViewDifficulty;
    this.textViewHabitDescription = textViewHabitDescription;
    this.textViewHabitName = textViewHabitName;
    this.textViewIcon = textViewIcon;
    this.textViewStreak = textViewStreak;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHabitBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHabitBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_habit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHabitBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonDelete;
      ImageButton buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.buttonEdit;
      ImageButton buttonEdit = ViewBindings.findChildViewById(rootView, id);
      if (buttonEdit == null) {
        break missingId;
      }

      id = R.id.buttonMenu;
      ImageButton buttonMenu = ViewBindings.findChildViewById(rootView, id);
      if (buttonMenu == null) {
        break missingId;
      }

      id = R.id.cardBackground;
      ConstraintLayout cardBackground = ViewBindings.findChildViewById(rootView, id);
      if (cardBackground == null) {
        break missingId;
      }

      id = R.id.checkBoxHabit;
      CheckBox checkBoxHabit = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxHabit == null) {
        break missingId;
      }

      id = R.id.layoutTags;
      LinearLayout layoutTags = ViewBindings.findChildViewById(rootView, id);
      if (layoutTags == null) {
        break missingId;
      }

      id = R.id.textViewCategory;
      TextView textViewCategory = ViewBindings.findChildViewById(rootView, id);
      if (textViewCategory == null) {
        break missingId;
      }

      id = R.id.textViewDifficulty;
      TextView textViewDifficulty = ViewBindings.findChildViewById(rootView, id);
      if (textViewDifficulty == null) {
        break missingId;
      }

      id = R.id.textViewHabitDescription;
      TextView textViewHabitDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewHabitDescription == null) {
        break missingId;
      }

      id = R.id.textViewHabitName;
      TextView textViewHabitName = ViewBindings.findChildViewById(rootView, id);
      if (textViewHabitName == null) {
        break missingId;
      }

      id = R.id.textViewIcon;
      TextView textViewIcon = ViewBindings.findChildViewById(rootView, id);
      if (textViewIcon == null) {
        break missingId;
      }

      id = R.id.textViewStreak;
      TextView textViewStreak = ViewBindings.findChildViewById(rootView, id);
      if (textViewStreak == null) {
        break missingId;
      }

      return new ItemHabitBinding((MaterialCardView) rootView, buttonDelete, buttonEdit, buttonMenu,
          cardBackground, checkBoxHabit, layoutTags, textViewCategory, textViewDifficulty,
          textViewHabitDescription, textViewHabitName, textViewIcon, textViewStreak);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
