// Generated by view binder compiler. Do not edit!
package com.wellness.brightwell.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.wellness.brightwell.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMoodBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton buttonShare;

  @NonNull
  public final FloatingActionButton fabAddMood;

  @NonNull
  public final LinearLayout layoutEmpty;

  @NonNull
  public final RecyclerView recyclerViewMoods;

  @NonNull
  public final TextView textViewTitle;

  private FragmentMoodBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton buttonShare, @NonNull FloatingActionButton fabAddMood,
      @NonNull LinearLayout layoutEmpty, @NonNull RecyclerView recyclerViewMoods,
      @NonNull TextView textViewTitle) {
    this.rootView = rootView;
    this.buttonShare = buttonShare;
    this.fabAddMood = fabAddMood;
    this.layoutEmpty = layoutEmpty;
    this.recyclerViewMoods = recyclerViewMoods;
    this.textViewTitle = textViewTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMoodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMoodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_mood, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMoodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonShare;
      MaterialButton buttonShare = ViewBindings.findChildViewById(rootView, id);
      if (buttonShare == null) {
        break missingId;
      }

      id = R.id.fabAddMood;
      FloatingActionButton fabAddMood = ViewBindings.findChildViewById(rootView, id);
      if (fabAddMood == null) {
        break missingId;
      }

      id = R.id.layoutEmpty;
      LinearLayout layoutEmpty = ViewBindings.findChildViewById(rootView, id);
      if (layoutEmpty == null) {
        break missingId;
      }

      id = R.id.recyclerViewMoods;
      RecyclerView recyclerViewMoods = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewMoods == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      return new FragmentMoodBinding((ConstraintLayout) rootView, buttonShare, fabAddMood,
          layoutEmpty, recyclerViewMoods, textViewTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
