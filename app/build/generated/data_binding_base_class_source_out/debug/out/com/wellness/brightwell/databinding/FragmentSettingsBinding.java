// Generated by view binder compiler. Do not edit!
package com.wellness.brightwell.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.wellness.brightwell.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton buttonChangeInterval;

  @NonNull
  public final MaterialButton buttonClearData;

  @NonNull
  public final MaterialCardView cardAbout;

  @NonNull
  public final SwitchMaterial switchHydrationReminder;

  @NonNull
  public final TextView textIntervalValue;

  @NonNull
  public final TextView textReminderStatus;

  private FragmentSettingsBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton buttonChangeInterval, @NonNull MaterialButton buttonClearData,
      @NonNull MaterialCardView cardAbout, @NonNull SwitchMaterial switchHydrationReminder,
      @NonNull TextView textIntervalValue, @NonNull TextView textReminderStatus) {
    this.rootView = rootView;
    this.buttonChangeInterval = buttonChangeInterval;
    this.buttonClearData = buttonClearData;
    this.cardAbout = cardAbout;
    this.switchHydrationReminder = switchHydrationReminder;
    this.textIntervalValue = textIntervalValue;
    this.textReminderStatus = textReminderStatus;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonChangeInterval;
      MaterialButton buttonChangeInterval = ViewBindings.findChildViewById(rootView, id);
      if (buttonChangeInterval == null) {
        break missingId;
      }

      id = R.id.buttonClearData;
      MaterialButton buttonClearData = ViewBindings.findChildViewById(rootView, id);
      if (buttonClearData == null) {
        break missingId;
      }

      id = R.id.cardAbout;
      MaterialCardView cardAbout = ViewBindings.findChildViewById(rootView, id);
      if (cardAbout == null) {
        break missingId;
      }

      id = R.id.switchHydrationReminder;
      SwitchMaterial switchHydrationReminder = ViewBindings.findChildViewById(rootView, id);
      if (switchHydrationReminder == null) {
        break missingId;
      }

      id = R.id.textIntervalValue;
      TextView textIntervalValue = ViewBindings.findChildViewById(rootView, id);
      if (textIntervalValue == null) {
        break missingId;
      }

      id = R.id.textReminderStatus;
      TextView textReminderStatus = ViewBindings.findChildViewById(rootView, id);
      if (textReminderStatus == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ScrollView) rootView, buttonChangeInterval,
          buttonClearData, cardAbout, switchHydrationReminder, textIntervalValue,
          textReminderStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
