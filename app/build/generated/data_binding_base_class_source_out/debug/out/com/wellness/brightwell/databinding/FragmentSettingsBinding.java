// Generated by view binder compiler. Do not edit!
package com.wellness.brightwell.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.wellness.brightwell.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton buttonExportAll;

  @NonNull
  public final MaterialButton buttonExportHabits;

  @NonNull
  public final MaterialButton buttonExportHydration;

  @NonNull
  public final MaterialButton buttonExportMoods;

  @NonNull
  public final SeekBar seekBarInterval;

  @NonNull
  public final SwitchMaterial switchDarkMode;

  @NonNull
  public final SwitchMaterial switchHydrationReminder;

  @NonNull
  public final TextView textViewAppVersion;

  @NonNull
  public final TextView textViewIntervalValue;

  private FragmentSettingsBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton buttonExportAll, @NonNull MaterialButton buttonExportHabits,
      @NonNull MaterialButton buttonExportHydration, @NonNull MaterialButton buttonExportMoods,
      @NonNull SeekBar seekBarInterval, @NonNull SwitchMaterial switchDarkMode,
      @NonNull SwitchMaterial switchHydrationReminder, @NonNull TextView textViewAppVersion,
      @NonNull TextView textViewIntervalValue) {
    this.rootView = rootView;
    this.buttonExportAll = buttonExportAll;
    this.buttonExportHabits = buttonExportHabits;
    this.buttonExportHydration = buttonExportHydration;
    this.buttonExportMoods = buttonExportMoods;
    this.seekBarInterval = seekBarInterval;
    this.switchDarkMode = switchDarkMode;
    this.switchHydrationReminder = switchHydrationReminder;
    this.textViewAppVersion = textViewAppVersion;
    this.textViewIntervalValue = textViewIntervalValue;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonExportAll;
      MaterialButton buttonExportAll = ViewBindings.findChildViewById(rootView, id);
      if (buttonExportAll == null) {
        break missingId;
      }

      id = R.id.buttonExportHabits;
      MaterialButton buttonExportHabits = ViewBindings.findChildViewById(rootView, id);
      if (buttonExportHabits == null) {
        break missingId;
      }

      id = R.id.buttonExportHydration;
      MaterialButton buttonExportHydration = ViewBindings.findChildViewById(rootView, id);
      if (buttonExportHydration == null) {
        break missingId;
      }

      id = R.id.buttonExportMoods;
      MaterialButton buttonExportMoods = ViewBindings.findChildViewById(rootView, id);
      if (buttonExportMoods == null) {
        break missingId;
      }

      id = R.id.seekBarInterval;
      SeekBar seekBarInterval = ViewBindings.findChildViewById(rootView, id);
      if (seekBarInterval == null) {
        break missingId;
      }

      id = R.id.switchDarkMode;
      SwitchMaterial switchDarkMode = ViewBindings.findChildViewById(rootView, id);
      if (switchDarkMode == null) {
        break missingId;
      }

      id = R.id.switchHydrationReminder;
      SwitchMaterial switchHydrationReminder = ViewBindings.findChildViewById(rootView, id);
      if (switchHydrationReminder == null) {
        break missingId;
      }

      id = R.id.textViewAppVersion;
      TextView textViewAppVersion = ViewBindings.findChildViewById(rootView, id);
      if (textViewAppVersion == null) {
        break missingId;
      }

      id = R.id.textViewIntervalValue;
      TextView textViewIntervalValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewIntervalValue == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ScrollView) rootView, buttonExportAll, buttonExportHabits,
          buttonExportHydration, buttonExportMoods, seekBarInterval, switchDarkMode,
          switchHydrationReminder, textViewAppVersion, textViewIntervalValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
